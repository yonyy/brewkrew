version: 2.1
orbs:
  aws-s3: circleci/aws-s3@3.0
executors:
  node:
    docker:
      - image: cimg/python:3.10.4-node
    working_directory: /tmp
jobs:
  setup:
    executor: node
    steps:
      - checkout
      - run:
          name: "Node version"
          command: node -v
      - run:
          name: "NPM version"
          command: npm -v
      - restore_cache: # special step to restore the dependency cache
          key: npm-dependency-cache-{{ checksum "package.json" }}
      - run:
          name: "Install dependencies"
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: npm-dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
  test:
    executor: node
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          key: npm-dependency-cache-{{ checksum "package.json" }}
      - run:
          name: "Eslint"
          command: npm run test
  build:
    executor: node
    steps:
      - checkout
      - restore_cache: # special step to restore the dependency cache
          key: npm-dependency-cache-{{ checksum "package.json" }}
          name: "Build bundle"
          command: npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - dist
  deploy2s3:
    executor: node
    steps:
      - attach_workspace:
          at: /temp
      # Sync assests
      - aws-s3/sync:
          from: dist
          to: s3://brewkrew.io
          arguments: |
            --exclude *.html \
            --cache-control 'max-age=31536000, public' \
            --delete
      # Sync html
      - aws-s3/sync:
          from: dist
          to: s3://brewkrew.io
          arguments: |
            --exclude *.js \
            --exclude *.css \
            --exclude *.jpg \
            --cache-control 'no-cache' \
            --delete
workflows:
  build-test-deploy:
    jobs:
      - setup
      - test:
          requires:
            - setup
      - build:
          requires:
            - test
      - deploy2s3:
          filters:
            branches:
              only: master
          requires:
            - build
